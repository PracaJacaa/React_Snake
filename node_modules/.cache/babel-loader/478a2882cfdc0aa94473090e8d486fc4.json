{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Grid from \"./constructors/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridSize: [9, 9],\n      snake: [],\n      food: []\n    };\n  }\n\n  getMiddleOfCords(gridSize) {\n    let xSize = gridSize[4];\n    let ySize = gridSize[4];\n    let xMiddle = parseInt(xSize / 2);\n    let yMiddle = parseInt(ySize / 1);\n    return [xMiddle, yMiddle];\n  }\n\n  componentDidMount() {\n    let ValofmiddleCoordinates = this.getMiddleOfCords(this.state.gridSize);\n    this.setState({\n      snake: ValofmiddleCoordinates\n    });\n  }\n\n  Randomfood() {\n    let apple = gameGrid[Math.floor(Math.random() * gameGrid.length)];\n    console.log(apple);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      grid: this.props.gameGrid,\n      snake: this.state.snake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/workspace/React_Snake/src/index.js"],"names":["React","ReactDOM","Grid","Game","Component","constructor","props","state","gridSize","snake","food","getMiddleOfCords","xSize","ySize","xMiddle","parseInt","yMiddle","componentDidMount","ValofmiddleCoordinates","setState","Randomfood","apple","gameGrid","Math","floor","random","length","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAC,CAAC,CAAD,EAAG,CAAH,CADD;AAERC,MAAAA,KAAK,EAAC,EAFE;AAGRC,MAAAA,IAAI,EAAC;AAHG,KAAZ;AAKH;;AAEDC,EAAAA,gBAAgB,CAACH,QAAD,EAAU;AACtB,QAAII,KAAK,GAAGJ,QAAQ,CAAC,CAAD,CAApB;AACA,QAAIK,KAAK,GAAGL,QAAQ,CAAC,CAAD,CAApB;AAEA,QAAIM,OAAO,GAAGC,QAAQ,CAACH,KAAK,GAAG,CAAT,CAAtB;AACA,QAAII,OAAO,GAAGD,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAtB;AAEA,WAAO,CAACC,OAAD,EAAUE,OAAV,CAAP;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,sBAAsB,GAAG,KAAKP,gBAAL,CAAsB,KAAKJ,KAAL,CAAWC,QAAjC,CAA7B;AACA,SAAKW,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAES;AAAT,KAAd;AACD;;AAGHE,EAAAA,UAAU,GAAE;AACR,QAAIC,KAAK,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,QAAQ,CAACI,MAAlC,CAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH;;AAEDQ,EAAAA,MAAM,GAAI;AAEN,wBACQ,QAAC,IAAD;AACI,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWgB,QADrB;AAEI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE;AAFtB;AAAA;AAAA;AAAA;AAAA,YADR;AAMH;;AAxC6B;;AA4ClCR,QAAQ,CAAC4B,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Grid from \"./constructors/Grid\";\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            gridSize:[9,9],\n            snake:[],\n            food:[],\n        };\n    }\n\n    getMiddleOfCords(gridSize){\n        let xSize = gridSize[4]\n        let ySize = gridSize[4]\n\n        let xMiddle = parseInt(xSize / 2);\n        let yMiddle = parseInt(ySize / 1);\n\n        return [xMiddle, yMiddle];\n\n    }\n\n    componentDidMount() {\n        let ValofmiddleCoordinates = this.getMiddleOfCords(this.state.gridSize);\n        this.setState({ snake: ValofmiddleCoordinates });\n      }\n\n\n    Randomfood(){\n        let apple = gameGrid[Math.floor(Math.random()*gameGrid.length)];\n        console.log(apple);\n    }\n\n    render () {\n\n        return (\n                <Grid \n                    grid={this.props.gameGrid}\n                    snake={this.state.snake}\n                />\n               )\n    } \n\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}