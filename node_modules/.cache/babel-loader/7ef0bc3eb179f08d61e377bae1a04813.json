{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/constructors/Grid.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tile from \"./Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  Randomfood() {\n    let apple = gameGrid[Math.floor(Math.random() * gameGrid.length)];\n    console.log(apple);\n  }\n\n  render() {\n    const gameGrid = Array(9).fill(Array(9).fill(null));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"xGrid\",\n      children: gameGrid.map((gridX, XIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yGrid\",\n          children: gridX.map((gridY, YIndex) => {\n            return /*#__PURE__*/_jsxDEV(Tile, {\n              X: XIndex,\n              Y: YIndex,\n              snake: this.props.snake\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 39\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/workspace/React_Snake/src/constructors/Grid.js"],"names":["React","ReactDOM","Tile","Grid","Component","constructor","props","Randomfood","apple","gameGrid","Math","floor","random","length","console","log","render","Array","fill","map","gridX","XIndex","gridY","YIndex","snake"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,UAAU,GAAE;AACR,QAAIC,KAAK,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,QAAQ,CAACI,MAAlC,CAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAMP,QAAQ,GAAGQ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcD,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAd,CAAjB;AAEI,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKT,QAAQ,CAACU,GAAT,CAAa,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,4BACA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBACKD,KAAK,CAACD,GAAN,CAAU,CAACG,KAAD,EAAOC,MAAP,KAAkB;AAC1B,gCAAO,QAAC,IAAD;AAAM,cAAA,CAAC,EAAEF,MAAT;AAAiB,cAAA,CAAC,EAAEE,MAApB;AAA4B,cAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWkB;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAAP;AACF,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBADA;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAcP;;AA3B6B;;AA+BlC,eAAerB,IAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tile from \"./Tile\";\n\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    Randomfood(){\n        let apple = gameGrid[Math.floor(Math.random()*gameGrid.length)];\n        console.log(apple);\n    }\n\n    render() {\n        const gameGrid = Array(9).fill(Array(9).fill(null));  \n            \n            return (\n                <div className=\"xGrid\">\n                    {gameGrid.map((gridX,XIndex) => {\n                        return(\n                        <div className=\"yGrid\">\n                            {gridX.map((gridY,YIndex) => {\n                               return <Tile X={XIndex} Y={YIndex} snake={this.props.snake}/>\n                            })}\n                        </div>\n                        )\n                    }\n                    )}\n                </div>\n            )              \n    }\n}\n\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}