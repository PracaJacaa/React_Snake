{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/constructors/Grid.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tile from \"./Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const gameGrid = Array(9).fill(Array(9).fill(null));\n    let snakeX = parseInt(this.props.snake[0]);\n    let snakeY = parseInt(this.props.snake[1]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"xGrid\",\n      children: [gameGrid.map((gridY, YIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yGrid\",\n          children: gridY.map((gridX, XIndex) => {\n            return /*#__PURE__*/_jsxDEV(Tile, {\n              X: XIndex,\n              Y: YIndex,\n              snake: this.props.snake,\n              apple: this.props.apple\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 39\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X \", snakeX, \" // Y \", this.props.snake[1], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/workspace/React_Snake/src/constructors/Grid.js"],"names":["React","ReactDOM","Tile","Grid","Component","constructor","props","render","gameGrid","Array","fill","snakeX","parseInt","snake","snakeY","map","gridY","YIndex","gridX","XIndex","apple"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,QAAQ,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcD,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAd,CAAjB;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAAC,KAAKN,KAAL,CAAWO,KAAX,CAAiB,CAAjB,CAAD,CAArB;AACA,QAAIC,MAAM,GAAGF,QAAQ,CAAC,KAAKN,KAAL,CAAWO,KAAX,CAAiB,CAAjB,CAAD,CAArB;AAEI,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACKL,QAAQ,CAACO,GAAT,CAAa,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,4BACA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBACKD,KAAK,CAACD,GAAN,CAAU,CAACG,KAAD,EAAOC,MAAP,KAAkB;AAC1B,gCAAO,QAAC,IAAD;AAAM,cAAA,CAAC,EAAEA,MAAT;AAAiB,cAAA,CAAC,EAAEF,MAApB;AAA4B,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWO,KAA9C;AAAqD,cAAA,KAAK,EAAE,KAAKP,KAAL,CAAWc;AAAvE;AAAA;AAAA;AAAA;AAAA,oBAAP;AACF,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBADA;AAOH,OARA,CADL,eAWI;AAAA,yBAAMT,MAAN,YAAoB,KAAKL,KAAL,CAAWO,KAAX,CAAiB,CAAjB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBP;;AA5B6B;;AAgClC,eAAeV,IAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tile from \"./Tile\";\n\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n\n        const gameGrid = Array(9).fill(Array(9).fill(null));  \n        let snakeX = parseInt(this.props.snake[0])\n        let snakeY = parseInt(this.props.snake[1])\n            \n            return (\n                <div className=\"xGrid\">\n                    {gameGrid.map((gridY,YIndex) => {\n                        return(\n                        <div className=\"yGrid\">\n                            {gridY.map((gridX,XIndex) => {\n                               return <Tile X={XIndex} Y={YIndex} snake={this.props.snake} apple={this.props.apple}/>\n                            })}\n                        </div>\n                        )\n                    }\n                    )}\n                    <p>X {snakeX} // Y {this.props.snake[1]} </p>\n                </div>\n\n            )           \n\n    }\n}\n\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}