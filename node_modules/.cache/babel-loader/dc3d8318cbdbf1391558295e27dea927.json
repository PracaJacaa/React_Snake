{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction arraysEqual(arrayOne, arrayTwo) {\n  // Compare the size\n  if (arrayOne.length !== arrayTwo.length) {\n    return false;\n  } // Compare the content\n\n\n  for (var i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] != arrayTwo[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridSize: [7, 7],\n      snake: [],\n      food: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      grid: this.props.gameGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const gameGrid = Array(7).fill(Array(7).fill(null));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"xGrid\",\n      children: gameGrid.map((gridX, XIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yGrid\",\n          children: gridX.map((gridY, YIndex) => {\n            return /*#__PURE__*/_jsxDEV(Tile, {\n              X: XIndex,\n              Y: YIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 39\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let isSnake = arraysEqual(this.props.snake, [this.props.X, this.props.Y]) ? \"snake\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile\",\n      children: `X ${this.props.X} - Y ${this.props.Y}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/workspace/React_Snake/src/index.js"],"names":["React","ReactDOM","arraysEqual","arrayOne","arrayTwo","length","i","Game","Component","constructor","props","state","gridSize","snake","food","render","gameGrid","Grid","Array","fill","map","gridX","XIndex","gridY","YIndex","Tile","isSnake","X","Y","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyC;AACrC;AACA,MAAID,QAAQ,CAACE,MAAT,KAAoBD,QAAQ,CAACC,MAAjC,EAAyC;AACvC,WAAO,KAAP;AACD,GAJoC,CAMrC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACE,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACxC,QAAIH,QAAQ,CAACG,CAAD,CAAR,IAAeF,QAAQ,CAACE,CAAD,CAA3B,EAAgC;AAC9B,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAEH,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAC,CAAC,CAAD,EAAG,CAAH,CADD;AAERC,MAAAA,KAAK,EAAC,EAFE;AAGRC,MAAAA,IAAI,EAAC;AAHG,KAAZ;AAKH;;AAEDC,EAAAA,MAAM,GAAI;AACN,wBACQ,QAAC,IAAD;AACI,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM;AADrB;AAAA;AAAA;AAAA;AAAA,YADR;AAKH;;AAhB6B;;AAoBlC,MAAMC,IAAN,SAAmBjB,KAAK,CAACQ,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAGE,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcD,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAd,CAAjB;AAEI,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKH,QAAQ,CAACI,GAAT,CAAa,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,4BACA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBACKD,KAAK,CAACD,GAAN,CAAU,CAACG,KAAD,EAAOC,MAAP,KAAkB;AAC1B,gCAAO,QAAC,IAAD;AAAM,cAAA,CAAC,EAAEF,MAAT;AAAiB,cAAA,CAAC,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACF,WAFA;AADL;AAAA;AAAA;AAAA;AAAA,gBADA;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAcP;;AAtB6B;;AA0BlC,MAAMC,IAAN,SAAmBzB,KAAK,CAACQ,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEH;;AACDK,EAAAA,MAAM,GAAE;AACJ,QAAIW,OAAO,GAAGxB,WAAW,CAAC,KAAKQ,KAAL,CAAWG,KAAZ,EAAmB,CAAC,KAAKH,KAAL,CAAWiB,CAAZ,EAAe,KAAKjB,KAAL,CAAWkB,CAA1B,CAAnB,CAAX,GACZ,OADY,GACH,EADX;AAGA,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAwB,KAAI,KAAKlB,KAAL,CAAWiB,CAAE,QAAO,KAAKjB,KAAL,CAAWkB,CAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAZ6B;;AAiBlC3B,QAAQ,CAACc,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0Bc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction arraysEqual(arrayOne, arrayTwo) {\n    // Compare the size\n    if (arrayOne.length !== arrayTwo.length) {\n      return false;\n    }\n  \n    // Compare the content\n    for (var i = 0; i < arrayOne.length; i++) {\n      if (arrayOne[i] != arrayTwo[i]) {\n        return false;\n      }\n    }\n  \n    return true;\n  }\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            gridSize:[7,7],\n            snake:[],\n            food:[],\n        }\n    }\n\n    render () {\n        return (\n                <Grid \n                    grid={this.props.gameGrid}\n                />\n               )\n    } \n\n}\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const gameGrid = Array(7).fill(Array(7).fill(null));  \n            \n            return (\n                <div className=\"xGrid\">\n                    {gameGrid.map((gridX,XIndex) => {\n                        return(\n                        <div className=\"yGrid\">\n                            {gridX.map((gridY,YIndex) => {\n                               return <Tile X={XIndex} Y={YIndex} />\n                            })}\n                        </div>\n                        )\n                    }\n                    )}\n                </div>\n            )              \n    }\n\n}\n\nclass Tile extends React.Component{\n    constructor(props){\n        super(props);\n        \n    }\n    render(){\n        let isSnake = arraysEqual(this.props.snake, [this.props.X, this.props.Y])\n        ? \"snake\": \"\";\n\n        return <div className=\"tile\">{`X ${this.props.X} - Y ${this.props.Y}`}</div>\n\n\n    }\n}\n\n\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}