{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Grid from \"./constructors/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gridSize: [9, 9],\n      snake: [],\n      apple: [],\n      movmentTo: \"up\",\n      time: 0\n    }; // this.gametick = this.gametick.bind(this);\n  }\n\n  Howtomove() {\n    handleKey = event => {\n      if (event.key === 'W') {\n        console.log('w');\n      }\n    };\n  }\n\n  gametick() {\n    // let xSize = gridSize[0]\n    // let ySize = gridSize[1]\n    let xSnakePosition = this.state.snake[0];\n    let ySnakePosition = this.state.snake[1];\n\n    switch (this.state.movmentTo) {\n      // left example\n      case \"left\":\n        // let newSnakex = xSnakePosition-1\n        this.setState({\n          snake: [xSnakePosition - 1, ySnakePosition]\n        });\n        break;\n\n      case \"right\":\n        // righ example\n        // let newSnakex = xSnakePosition+1\n        this.setState({\n          snake: [xSnakePosition + 1, ySnakePosition]\n        });\n        break;\n\n      case \"down\":\n        //go down example\n        this.setState({\n          snake: [xSnakePosition, ySnakePosition + 1]\n        });\n        break;\n\n      case \"up\":\n        //go up example\n        this.setState({\n          snake: [xSnakePosition, ySnakePosition - 1]\n        });\n        break;\n    }\n  }\n\n  getRandomApple(gridSize) {\n    let xSize = gridSize[0];\n    let ySize = gridSize[1];\n    let xApple = Math.floor(Math.random() * xSize);\n    let yApple = Math.floor(Math.random() * ySize);\n    let xSnake = this.state.snake[0];\n    let ySnake = this.state.snake[1];\n\n    if (xApple === xSnake && yApple === ySnake) {\n      return this.getRandomApple(gridSize);\n    } else {\n      return [xApple, yApple];\n    }\n  }\n\n  getMiddleOfCordsSnake(gridSize) {\n    let xSize = gridSize[0];\n    let ySize = gridSize[1];\n    let xMiddle = parseInt(xSize / 2);\n    let yMiddle = parseInt(ySize / 2);\n    return [xMiddle, yMiddle];\n  }\n\n  componentDidMount() {\n    let ValofmiddleCoordinates = this.getMiddleOfCordsSnake(this.state.gridSize);\n    this.setState({\n      snake: ValofmiddleCoordinates\n    });\n    let ValofrandomApple = this.getRandomApple(this.state.gridSize);\n    this.setState({\n      apple: ValofrandomApple\n    });\n    setInterval(() => this.gametick(), 2000);\n    window.addEventListener('W', this.Howtomove);\n    window.addEventListener('A', this.Howtomove());\n    window.addEventListener('S', this.Howtomove());\n    window.addEventListener('D', this.Howtomove());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      grid: this.props.gameGrid,\n      snake: this.state.snake,\n      apple: this.state.apple\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 122,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/workspace/React_Snake/src/index.js"],"names":["React","ReactDOM","Grid","Game","Component","constructor","props","state","gridSize","snake","apple","movmentTo","time","Howtomove","handleKey","event","key","console","log","gametick","xSnakePosition","ySnakePosition","setState","getRandomApple","xSize","ySize","xApple","Math","floor","random","yApple","xSnake","ySnake","getMiddleOfCordsSnake","xMiddle","parseInt","yMiddle","componentDidMount","ValofmiddleCoordinates","ValofrandomApple","setInterval","window","addEventListener","render","gameGrid","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,QAAQ,EAAC,CAAC,CAAD,EAAG,CAAH,CADD;AAERC,MAAAA,KAAK,EAAC,EAFE;AAGRC,MAAAA,KAAK,EAAC,EAHE;AAIRC,MAAAA,SAAS,EAAE,IAJH;AAKRC,MAAAA,IAAI,EAAC;AALG,KAAZ,CAFc,CASd;AAEH;;AAEDC,EAAAA,SAAS,GAAE;AAGPC,IAAAA,SAAS,GAAGC,KAAD,IAAS;AAChB,UAAGA,KAAK,CAACC,GAAN,KAAc,GAAjB,EAAqB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;AAEN,KALD;AAMH;;AAGDC,EAAAA,QAAQ,GAAE;AACN;AACA;AAEA,QAAIC,cAAc,GAAG,KAAKb,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAArB;AACA,QAAIY,cAAc,GAAG,KAAKd,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAArB;;AAGA,YAAO,KAAKF,KAAL,CAAWI,SAAlB;AACQ;AACJ,WAAK,MAAL;AACI;AACA,aAAKW,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAE,CAACW,cAAc,GAAC,CAAhB,EAAmBC,cAAnB;AAAR,SAAd;AACJ;;AACA,WAAK,OAAL;AACI;AACA;AACA,aAAKC,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAE,CAACW,cAAc,GAAC,CAAhB,EAAmBC,cAAnB;AAAR,SAAd;AACJ;;AACA,WAAK,MAAL;AACI;AACA,aAAKC,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAE,CAACW,cAAD,EAAiBC,cAAc,GAAC,CAAhC;AAAR,SAAd;AACJ;;AACA,WAAK,IAAL;AACI;AACA,aAAKC,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAE,CAACW,cAAD,EAAiBC,cAAc,GAAC,CAAhC;AAAR,SAAd;AACA;AAlBR;AAqBH;;AAEDE,EAAAA,cAAc,CAACf,QAAD,EAAU;AACpB,QAAIgB,KAAK,GAAGhB,QAAQ,CAAC,CAAD,CAApB;AACA,QAAIiB,KAAK,GAAGjB,QAAQ,CAAC,CAAD,CAApB;AAEA,QAAIkB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcL,KAAzB,CAAb;AACA,QAAIM,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcJ,KAAzB,CAAb;AAEA,QAAIM,MAAM,GAAG,KAAKxB,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAAb;AACA,QAAIuB,MAAM,GAAG,KAAKzB,KAAL,CAAWE,KAAX,CAAiB,CAAjB,CAAb;;AAEA,QAAGiB,MAAM,KAAKK,MAAX,IAAqBD,MAAM,KAAKE,MAAnC,EAA0C;AACtC,aAAO,KAAKT,cAAL,CAAoBf,QAApB,CAAP;AACH,KAFD,MAGK;AACD,aAAO,CAACkB,MAAD,EAAQI,MAAR,CAAP;AACH;AACJ;;AAGDG,EAAAA,qBAAqB,CAACzB,QAAD,EAAU;AAC3B,QAAIgB,KAAK,GAAGhB,QAAQ,CAAC,CAAD,CAApB;AACA,QAAIiB,KAAK,GAAGjB,QAAQ,CAAC,CAAD,CAApB;AAEA,QAAI0B,OAAO,GAAGC,QAAQ,CAACX,KAAK,GAAG,CAAT,CAAtB;AACA,QAAIY,OAAO,GAAGD,QAAQ,CAACV,KAAK,GAAG,CAAT,CAAtB;AAEA,WAAO,CAACS,OAAD,EAAUE,OAAV,CAAP;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,sBAAsB,GAAG,KAAKL,qBAAL,CAA2B,KAAK1B,KAAL,CAAWC,QAAtC,CAA7B;AACA,SAAKc,QAAL,CAAc;AAAEb,MAAAA,KAAK,EAAE6B;AAAT,KAAd;AAEA,QAAIC,gBAAgB,GAAG,KAAKhB,cAAL,CAAoB,KAAKhB,KAAL,CAAWC,QAA/B,CAAvB;AACA,SAAKc,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAE6B;AAAT,KAAd;AAEAC,IAAAA,WAAW,CAAC,MAAM,KAAKrB,QAAL,EAAP,EAAwB,IAAxB,CAAX;AAEAsB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,GAAxB,EAA6B,KAAK7B,SAAlC;AACA4B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,GAAxB,EAA6B,KAAK7B,SAAL,EAA7B;AACA4B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,GAAxB,EAA6B,KAAK7B,SAAL,EAA7B;AACA4B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,GAAxB,EAA6B,KAAK7B,SAAL,EAA7B;AACD;;AAGH8B,EAAAA,MAAM,GAAI;AAEN,wBACQ,QAAC,IAAD;AACI,MAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWsC,QADrB;AAEI,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWE,KAFtB;AAGI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG;AAHtB;AAAA;AAAA;AAAA;AAAA,YADR;AAOH;;AAhH6B;;AAoHlCT,QAAQ,CAAC0C,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Grid from \"./constructors/Grid\";\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            gridSize:[9,9],\n            snake:[],\n            apple:[],\n            movmentTo: \"up\",\n            time:0\n        };\n        // this.gametick = this.gametick.bind(this);\n\n    }\n\n    Howtomove(){\n\n\n        handleKey =(event)=>{\n            if(event.key === 'W'){\n                console.log('w')\n              }\n            \n        }\n    }\n\n\n    gametick(){\n        // let xSize = gridSize[0]\n        // let ySize = gridSize[1]\n\n        let xSnakePosition = this.state.snake[0];\n        let ySnakePosition = this.state.snake[1];\n\n\n        switch(this.state.movmentTo){\n                // left example\n            case \"left\":\n                // let newSnakex = xSnakePosition-1\n                this.setState({snake: [xSnakePosition-1, ySnakePosition]});\n            break;\n            case \"right\":\n                // righ example\n                // let newSnakex = xSnakePosition+1\n                this.setState({snake: [xSnakePosition+1, ySnakePosition]});\n            break;\n            case \"down\":\n                //go down example\n                this.setState({snake: [xSnakePosition, ySnakePosition+1]});\n            break;\n            case \"up\":    \n                //go up example\n                this.setState({snake: [xSnakePosition, ySnakePosition-1]});\n                break;\n            }\n\n    }\n\n    getRandomApple(gridSize){\n        let xSize = gridSize[0]\n        let ySize = gridSize[1]\n\n        let xApple = Math.floor(Math.random()*xSize);\n        let yApple = Math.floor(Math.random()*ySize);\n\n        let xSnake = this.state.snake[0];\n        let ySnake = this.state.snake[1];\n\n        if(xApple === xSnake && yApple === ySnake){\n            return this.getRandomApple(gridSize)\n        }\n        else {\n            return [xApple,yApple]\n        }\n    }\n\n\n    getMiddleOfCordsSnake(gridSize){\n        let xSize = gridSize[0]\n        let ySize = gridSize[1]\n\n        let xMiddle = parseInt(xSize / 2);\n        let yMiddle = parseInt(ySize / 2);\n\n        return [xMiddle, yMiddle];\n\n    }\n\n    componentDidMount() {\n        let ValofmiddleCoordinates = this.getMiddleOfCordsSnake(this.state.gridSize);\n        this.setState({ snake: ValofmiddleCoordinates });\n\n        let ValofrandomApple = this.getRandomApple(this.state.gridSize);\n        this.setState({ apple: ValofrandomApple });\n\n        setInterval(() => this.gametick(), 2000)\n\n        window.addEventListener('W', this.Howtomove);\n        window.addEventListener('A', this.Howtomove());\n        window.addEventListener('S', this.Howtomove());\n        window.addEventListener('D', this.Howtomove());\n      }\n\n\n    render () {\n\n        return (\n                <Grid \n                    grid={this.props.gameGrid}\n                    snake={this.state.snake}\n                    apple={this.state.apple}\n                />\n               )\n    } \n\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}