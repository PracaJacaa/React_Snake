{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/constructors/Grid.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tile from \"./Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unlock = this.props.unlockBody;\n  }\n\n  if(unlock = false) {\n    render();\n    {\n      const gameGrid = Array(9).fill(Array(9).fill(null));\n      let snakeX = this.props.snake[0];\n      let snakeY = this.props.snake[1];\n      let points = this.props.points;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xGrid\",\n        children: [gameGrid.map((gridY, YIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yGrid\",\n            children: gridY.map((gridX, XIndex) => {\n              return /*#__PURE__*/_jsxDEV(Tile, {\n                X: XIndex,\n                Y: YIndex,\n                snake: this.props.snake,\n                apple: this.props.apple,\n                snakeHead: this.props.snakeBody\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 39\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"X \", snakeX, \" // Y \", snakeY, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"points \", points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/workspace/React_Snake/src/constructors/Grid.js"],"names":["React","ReactDOM","Tile","Grid","Component","constructor","props","unlock","unlockBody","if","render","gameGrid","Array","fill","snakeX","snake","snakeY","points","map","gridY","YIndex","gridX","XIndex","apple","snakeBody"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAGjBC,MAHiB,GAGR,KAAKD,KAAL,CAAWE,UAHH;AAEjB;;AAEDC,EAAAA,EAAE,CAAEF,MAAM,GAAG,KAAX,EAAiB;AACnBG,IAAAA,MAAM;AAAI;AAEN,YAAMC,QAAQ,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcD,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAd,CAAjB;AACA,UAAIC,MAAM,GAAG,KAAKR,KAAL,CAAWS,KAAX,CAAiB,CAAjB,CAAb;AACA,UAAIC,MAAM,GAAG,KAAKV,KAAL,CAAWS,KAAX,CAAiB,CAAjB,CAAb;AACA,UAAIE,MAAM,GAAG,KAAKX,KAAL,CAAWW,MAAxB;AAEI,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACKN,QAAQ,CAACO,GAAT,CAAa,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,8BACA;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBACKD,KAAK,CAACD,GAAN,CAAU,CAACG,KAAD,EAAOC,MAAP,KAAkB;AAC1B,kCAAO,QAAC,IAAD;AAAM,gBAAA,CAAC,EAAEA,MAAT;AAAiB,gBAAA,CAAC,EAAEF,MAApB;AAA4B,gBAAA,KAAK,EAAE,KAAKd,KAAL,CAAWS,KAA9C;AAAqD,gBAAA,KAAK,EAAE,KAAKT,KAAL,CAAWiB,KAAvE;AAA8E,gBAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWkB;AAApG;AAAA;AAAA;AAAA;AAAA,sBAAP;AACF,aAFA;AADL;AAAA;AAAA;AAAA;AAAA,kBADA;AAOH,SARA,CADL,eAWI;AAAA,2BAAMV,MAAN,YAAoBE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAA,gCAAWC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAiBP;AACJ;;AA/BiC;;AAmClC,eAAed,IAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Tile from \"./Tile\";\n\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props);\n    }\n     unlock = this.props.unlockBody\n    if( unlock = false){\n    render() ;{\n\n        const gameGrid = Array(9).fill(Array(9).fill(null));  \n        let snakeX = this.props.snake[0];\n        let snakeY = this.props.snake[1];\n        let points = this.props.points;\n            \n            return (\n                <div className=\"xGrid\">\n                    {gameGrid.map((gridY,YIndex) => {\n                        return(\n                        <div className=\"yGrid\">\n                            {gridY.map((gridX,XIndex) => {\n                               return <Tile X={XIndex} Y={YIndex} snake={this.props.snake} apple={this.props.apple} snakeHead={this.props.snakeBody}/>\n                            })}\n                        </div>\n                        )\n                    }\n                    )}\n                    <p>X {snakeX} // Y {snakeY} </p>\n                    <p>points {points}</p>\n                </div>\n\n            )           \n    }\n}\n}\n\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}