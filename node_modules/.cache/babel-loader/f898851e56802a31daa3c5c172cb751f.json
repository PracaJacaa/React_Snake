{"ast":null,"code":"var _jsxFileName = \"/workspace/React_Snake/src/constructors/Tile.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const snakeXCoordinate = this.props.snake[0];\n    const snakeYCoordinate = this.props.snake[1];\n    let isSnake = this.props.X === snakeXCoordinate && this.props.Y === s ? \"snake\" : \"\";\n    let className = `tile ${isSnake} `;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      id: (this.props.X, this.props.Y),\n      children: `X ${this.props.X} - Y ${this.props.Y}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Tile;","map":{"version":3,"sources":["/workspace/React_Snake/src/constructors/Tile.js"],"names":["React","ReactDOM","Tile","Component","constructor","props","render","snakeXCoordinate","snake","snakeYCoordinate","isSnake","X","Y","s","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACC;;AAELC,EAAAA,MAAM,GAAG;AACL,UAAMC,gBAAgB,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CAAzB;AACA,UAAMC,gBAAgB,GAAG,KAAKJ,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CAAzB;AAEA,QAAIE,OAAO,GAAG,KAAKL,KAAL,CAAWM,CAAX,KAAiBJ,gBAAjB,IAAqC,KAAKF,KAAL,CAAWO,CAAX,KAAiBC,CAAtD,GACd,OADc,GAEd,EAFA;AAGA,QAAIC,SAAS,GAAI,QAAOJ,OAAQ,GAAhC;AAGA,wBAAQ;AACJ,MAAA,SAAS,EAAEI,SADP;AAEJ,MAAA,EAAE,GAAE,KAAKT,KAAL,CAAWM,CAAX,EAAe,KAAKN,KAAL,CAAWO,CAA5B,CAFE;AAAA,gBAIE,KAAI,KAAKP,KAAL,CAAWM,CAAE,QAAO,KAAKN,KAAL,CAAWO,CAAE;AAJvC;AAAA;AAAA;AAAA;AAAA,YAAR;AAQA;;AAvB0B;;AA0BlC,eAAeV,IAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Tile extends React.Component{\n    constructor(props){\n        super(props);\n        };\n\n    render() {\n        const snakeXCoordinate = this.props.snake[0];\n        const snakeYCoordinate = this.props.snake[1];\n\n        let isSnake = this.props.X === snakeXCoordinate && this.props.Y === s\n      ? \"snake\"\n      : \"\";\n        let className = `tile ${isSnake} `;\n\n\n        return( <div \n            className={className} \n            id={this.props.X , this.props.Y}>\n\n                {`X ${this.props.X} - Y ${this.props.Y}`}\n\n                </div>\n            );\n       };\n    }\n\nexport default Tile;\n"]},"metadata":{},"sourceType":"module"}